# yaml-language-server: $schema=https://goreleaser.com/static/schema-pro.json
version: 2
# Root-level GoReleaser Pro configuration for monorepo
# This file orchestrates releases for CLI, SDK, and plugins based on environment variables

# Multi-component versioning strategy
# Main CLI releases: v1.2.3
# Plugin SDK releases: packages/plugin-sdk/v1.2.3
# Plugin releases: plugins/plugin-name/v1.2.3

# Global metadata
metadata:
  mod_timestamp: '{{ .CommitTimestamp }}'
# Environment-based configuration
env:
  # Environment variables passed from workflow
  - RELEASE_CLI={{ .Env.RELEASE_CLI }}
  - RELEASE_SDK={{ .Env.RELEASE_SDK }}
  - RELEASE_PLUGINS={{ .Env.RELEASE_PLUGINS }}
# Build configuration
builds:
  # CLI build (controlled by environment variables from workflow)
  - id: cli
    main: ./cmd/main.go
    binary: devex
    dir: ./apps/cli
    ldflags:
      - -X main.version={{ .Version }}
      - -X main.commit={{ .Commit }}
      - -X main.date={{ .Date }}
      - -X main.builtBy=goreleaser
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    ignore:
      # Skip unsupported combinations
      - goos: darwin
        goarch: "386"
      - goos: windows
        goarch: arm64
    env:
      - CGO_ENABLED=0
    flags:
      - -trimpath
    mod_timestamp: '{{ .CommitTimestamp }}'
# Plugin SDK is a Go module, not a binary - no GoReleaser config needed

# Global before hooks - prepare component-specific tags
before:
  hooks:
    # Show current context for debugging
    - cmd: echo "GoReleaser context:"
      output: true
    - cmd: echo "Tag={{ .Tag }}"
      output: true
    - cmd: echo "Version={{ .Version }}"
      output: true
    - cmd: echo "RELEASE_CLI=${RELEASE_CLI:-}"
      output: true
    - cmd: echo "RELEASE_PLUGINS=${RELEASE_PLUGINS:-}"
      output: true
    - cmd: echo "CHANGED_PLUGINS=${CHANGED_PLUGINS:-}"
      output: true
# Archive configuration
archives:
  - id: cli-archive
    # Archive CLI builds
    name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .OS }}_{{ .Arch }}'
    files:
      - README.md
      - LICENSE*
      - config/**/*
      - help/**/*
    meta: true
# Release configuration
release:
  github:
    owner: jameswlane
    name: devex
  draft: false
  replace_existing_draft: true
  target_commitish: '{{ .Commit }}'
  replace_existing_artifacts: true
  discussion_category_name: General
  prerelease: auto
  make_latest: true
  mode: append
  header: |
    ## DevEx Release {{ .Tag }}

    {{ if hasPrefix .Tag "v" }}
    ### üöÄ CLI Release
    This release includes CLI improvements and new features.
    {{ end }}

    {{ if hasPrefix .Tag "plugin-sdk/" }}
    ### üîß Plugin SDK Release
    This release includes Plugin SDK updates for plugin developers.
    {{ end }}

    {{ if hasPrefix .Tag "plugins/" }}
    ### üîå Plugin Release
    This release includes plugin updates.
    {{ end }}

    ## Installation

    {{ if hasPrefix .Tag "v" }}
    ### CLI
    ```bash
    # Linux/macOS
    curl -fsSL https://devex.sh/install | bash

    # Windows (PowerShell)
    iwr -useb https://devex.sh/install.ps1 | iex

    # Or download from releases below
    ```
    {{ end }}

    {{ if hasPrefix .Tag "plugin-sdk/" }}
    ### Plugin SDK
    ```go
    go get github.com/jameswlane/devex/packages/plugin-sdk@{{ .Tag }}
    ```
    {{ end }}

    {{ if hasPrefix .Tag "plugins/" }}
    ### Plugin Installation
    ```bash
    # Download from releases below or use DevEx CLI
    devex plugin install [plugin-name]
    ```
    {{ end }}
  footer: |
    ## What's Changed

    **Full Changelog**: https://github.com/jameswlane/devex/compare/{{ .PreviousTag }}...{{ .Tag }}

    ---

    ## Contributors

    Thank you to all the contributors who made this release possible! üéâ
# Changelog configuration
changelog:
  use: github
  sort: asc
  abbrev: 0
  groups:
    - title: 'üöÄ New Features'
      regexp: '^.*?feat(\(.+\))??!?:.+$'
      order: 0
    - title: 'üêõ Bug Fixes'
      regexp: '^.*?fix(\(.+\))??!?:.+$'
      order: 1
    - title: 'üìù Documentation'
      regexp: '^.*?docs(\(.+\))??!?:.+$'
      order: 2
    - title: 'üîß Other Changes'
      order: 999
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^style:'
      - 'merge conflict'
      - Merge pull request
      - Merge remote-tracking branch
      - Merge branch
      - go mod tidy
# Checksum configuration
checksum:
  name_template: 'checksums.txt'
  algorithm: sha256
# Sign configuration (optional, requires signing keys)
signs:
  - cmd: cosign
    env:
      - COSIGN_EXPERIMENTAL=1
    certificate: '${artifact}.pem'
    args:
      - sign-blob
      - '--output-certificate=${certificate}'
      - '--output-signature=${signature}'
      - '${artifact}'
      - --yes
    artifacts: checksum
# Publishers (optional)
publishers:
  - name: fury.io
    # Publish CLI packages
    cmd: bash -c 'curl -F package=@{{ .ArtifactPath }} https://push.fury.io/jameswlane/'
    env:
      - FURY_TOKEN={{ .Env.FURY_TOKEN }}
# Report sizes
report_sizes: true
